import React, { useState, useContext, useEffect,  } from "react";
import PriceCard from "../components/cards/PriceCard";
import axios from "axios";
import { UserContext } from "../context";
import { isActive, isPlan } from "./Login";
import { useNavigate, useLocation  } from "react-router-dom";

const Home = () => {
  const navigate = useNavigate();
  const [state, setState] = useContext(UserContext);
  const [item, setItem] = useState({
    basic: {
      name: "BASIC",
      amount: "20.00",
      access: "5 Dashboards",
      buttonTxt: "Subscribe"
    },
    standard: {
      name: "STANDARD",
      amount: "50.00",
      access: "15 Dashboards",
      buttonTxt: "Subscribe"
    },
    premium: {
      name: "PREMIUM",
      amount: "100.00",
      access: "25 Dashboards",
      buttonTxt: "Subscribe"
    },
  });

  useEffect(() => {
    fetchAccount();
  }, [state && state.token]);

  const fetchAccount = async () => {
    debugger
    const { data } = await axios.get("/get-subscription", {
      params: {
        email: sessionStorage.userId,
      },
    });
    const { active, plan } = data;
    if(active){
      if(plan === "BASIC"){
        setItem((prev) => ({
          ...prev,
          basic: {
            ...prev.basic, // Retain other properties from the previous `basic` object
            amount: null, // Update `amount`
            buttonTxt: "Active" // Update `buttonTxt`
          },
            standard: {
              ...prev.standard,
              buttonTxt: 'Upgrade'
            },
            premium: {
              ...prev.premium,
              buttonTxt: 'Upgrade'
            }
        }));
      }else if(plan === "STANDARD"){
        setItem((prev) => ({
          ...prev,
          basic: {
            ...prev.basic, 
          },
            standard: {
              ...prev.standard,
              amount: null,
              buttonTxt: 'Active'
            },
            premium: {
              ...prev.premium,
            }
        }));
      }else if(plan === "PREMIUM"){
        setItem((prev) => ({
          ...prev,
          basic: {
            ...prev.basic, 
          },
            standard: {
              ...prev.standard,
            },
            premium: {
              ...prev.premium,
              amount: null,
              buttonTxt: 'Active'
            }
        }));
      }
      
    }
  };

  const handleRequest = async (amount, plan, buttonTxt) => {
    if(isActive()){
      if(isPlan() === 'BASIC'){
        setItem((prev)=>({
          ...prev,
          standard: {
            ...prev.standard,
            buttonTxt: 'Upgrade'
          },
          premium: {
            ...prev.premium,
            buttonTxt: 'Upgrade'
          }
        }))
      }
    }

    if(buttonTxt === 'Active'){
      if(plan === 'BASIC'){
        setState((prev)=>({
          ...prev,
          plan: 'BASIC'
        }))
        navigate('/account')
        return
      }else if(plan === 'STANDARD'){
        setState((prev)=>({
          ...prev,
          plan: 'STANDARD'
        }))
        navigate('/account')
        return
      }else if(plan === 'PREMIUM'){
        setState((prev)=>({
          ...prev,
          plan: 'PREMIUM'
        }))
        navigate('/account')
        return
      }
    }
    
    if(buttonTxt === 'Upgrade'){
      alert('you have to upgrade')
      return
    }
    try {
      const { data } = await axios.post("/create-subscription", {
        userID: sessionStorage.userId, // Send any required data to the backend
        amount,
        plan,
      });
      // Create a form and append the necessary fields
      const form = document.createElement("form");
      form.method = "POST";
      form.action = data.url; // URL generated by the server
      form.target = "_blank"; // Open in a new window/tab

      // Add form fields dynamically
      Object.keys(data.fields).forEach((key) => {
        const input = document.createElement("input");
        input.type = "hidden";
        input.name = key;
        input.value = data.fields[key];
        form.appendChild(input);
      });

      // Append the form to the body and submit it
      document.body.appendChild(form);
      form.submit();
    } catch (error) {
      console.error("Error during payment process:", error);
    }
  };

  return (
    <div className="container-fluid">
      <div className="row col-md-6 offset-md-3 text-center">
        <h1 className="pt-5 fw-bold">SpectraIQ Pricing Plan</h1>
        <p className="lead pb-4">Choose a plan that suits you best!</p>
      </div>
      <div className="row pt-5 mb-3 text-center">
        <PriceCard
          handleRequest={handleRequest}
          amount={item.basic.amount}
          plan={item.basic.name}
          head_1={item.basic.access}
          buttonTxt={item.basic.buttonTxt}
        />
        <PriceCard
          handleRequest={handleRequest}
          amount={item.standard.amount}
          plan={item.standard.name}
          head_1={item.standard.access}
          buttonTxt={item.standard.buttonTxt}
        />
        <PriceCard
          handleRequest={handleRequest}
          amount={item.premium.amount}
          plan={item.premium.name}
          head_1={item.premium.access}
          buttonTxt={item.premium.buttonTxt}
        />
      </div>
    </div>
  );
};

export default Home;
